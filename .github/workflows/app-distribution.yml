name: Release to Firebase App Distribution

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type to release'
        required: true
        default: 'paid_release'
        type: choice
        options:
          - paid_release
          - free_release
      build_aab:
        description: 'Build AAB artifacts'
        required: true
        default: false
        type: boolean

jobs:
  build-and-distribute-to-firebase:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
        
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: "temurin"
        java-version: 17

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.3' # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically

    - name: Install bundler & Fastlane
      run: |
        cd composeApp
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Install Firebase app distribution plugin
      run: |
        cd composeApp
        bundle exec fastlane add_plugin firebase_app_distribution

    - name: Decrypt keystore jks file and firebase service key
      env:
        KEYSTORE_JKS_KEY: ${{ secrets.UPLOAD_KEYSTORE_JKS_ENCODED }}
        FIREBASE_SERVICE_KEY: ${{ secrets.FASTLANE_FIREBASE_SERVICE_ENCODED }}
      run: |
        echo "decrypt keystore jks and save to file"
        echo "$KEYSTORE_JKS_KEY" | base64 --decode > /home/runner/work/KMPFlexiExpensesManager/KMPFlexiExpensesManager/composeApp/upload-keystore.jks
        echo "decrypt firebase service key and save to file"
        echo "$FIREBASE_SERVICE_KEY" | base64 --decode > /home/runner/work/KMPFlexiExpensesManager/KMPFlexiExpensesManager/composeApp/firebase_service_key.json

    - name: Make gradlew executable
      run: |
        chmod +x ./gradlew

    - name: Build the app and distribute to firebase
      env:
        KEYSTORE_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_JKS_PW }}
        KEYSTORE_ALIAS: ${{ secrets.UPLOAD_KEYSTORE_JKS_ALIAS }}
        FIREBASE_APP_ID_PAID_RELEASE: ${{ secrets.FIREBASE_APP_ID_PAID_RELEASE }}
      run: |
        cd composeApp
        bundle exec fastlane android distribute_${{ inputs.build_type }}
      

    - name: Build AAB with Fastlane
      if: ${{ inputs.build_aab == true }}
      env:
        KEYSTORE_PASSWORD: ${{ secrets.UPLOAD_KEYSTORE_JKS_PW }}
        KEYSTORE_ALIAS: ${{ secrets.UPLOAD_KEYSTORE_JKS_ALIAS }}
      run: |
        cd composeApp
        bundle exec fastlane android build_${{ inputs.build_type }}_aab_for_artifacts

#    - name: Debug - List files with absolute paths
#      run: |
#        echo "üîç Current directory: $(pwd)"
#        echo "üîç Absolute current directory: $(realpath .)"
#        echo ""
#        echo "=== Root directory ==="
#        ls -la
#        echo ""
#        echo "=== composeApp directory ==="
#        ls -la composeApp/
#        echo ""
#        echo "=== Looking for AAB files everywhere ==="
#        find . -name "*.aab" -type f 2>/dev/null | while read file; do
#          echo "Found AAB: $file (absolute: $(realpath "$file"))"
#        done
#        echo ""
#        echo "=== Checking specific expected locations ==="
#        test -f "composeApp-paid-release.aab" && echo "‚úÖ Found: composeApp-paid-release.aab" || echo "‚ùå Missing: composeApp-paid-release.aab"
#        test -f "composeApp/composeApp-paid-release.aab" && echo "‚úÖ Found: composeApp/composeApp-paid-release.aab" || echo "‚ùå Missing: composeApp/composeApp-paid-release.aab"
#
        

    - name: Upload AAB Artifact
      if: ${{ inputs.build_aab == true }}
      uses: actions/upload-artifact@v4
      with:
        name: aab-${{ inputs.build_type }}
        path: ./composeApp/composeApp-paid-release.aab  # This file is copied to root by fastlane
        retention-days: 30
