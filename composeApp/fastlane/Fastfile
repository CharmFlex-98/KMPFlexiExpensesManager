# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

# platform :android do
#   desc "Runs all the tests"
#   lane :test do
#     gradle(task: "test")
#   end
#
#   desc "Submit a new Beta Build to Crashlytics Beta"
#   lane :beta do
#     gradle(task: "clean assembleRelease")
#     crashlytics
#
#     # sh "your_script.sh"
#     # You can also use other beta testing services here
#   end
#
#   desc "Deploy a new version to the Google Play"
#   lane :deploy do
#     gradle(task: "clean assembleRelease")
#     upload_to_play_store
#   end
# end

platform :android do
    desc "Deploy app to firebase"
    lane :distribute_paid_release do
        gradle(
            task: "assemble",
            flavor: "paid",
            build_type: "release",
            print_command: false,
            properties: {
                "android.injected.signing.store.file" => "/home/runner/work/KMPFlexiExpensesManager/KMPFlexiExpensesManager/upload-keystore.jks",
                "android.injected.signing.store.password" => ENV['KEYSTORE_PASSWORD'],
                "android.injected.signing.key.alias" => ENV['KEYSTORE_ALIAS'],
                "android.injected.signing.key.password" => ENV['KEYSTORE_PASSWORD'],
            }
        )
        # build_android_app is a built-in fastlane action.
        release = firebase_app_distribution(
            app: ENV['FIREBASE_APP_ID_PAID_RELEASE'],
            service_credentials_file: "/home/runner/work/FlexiExpensesManager_Android/FlexiExpensesManager_Android/firebase_service_key.json",
            testers: "charmflex1111@gmail.com",
            release_notes: "This app is for testing purposes"
        )
    end

#     desc "Build app"
#     lane :build do
#         gradle(
#             task: "assemble",
#             flavor: "prod",
#             build_type: "release",
#             print_command: false,
#             properties: {
#                 "android.injected.signing.store.file" => "/home/runner/work/FlexiExpensesManager_Android/FlexiExpensesManager_Android/upload-keystore.jks",
#                 "android.injected.signing.store.password" => ENV['KEYSTORE_PASSWORD'],
#                 "android.injected.signing.key.alias" => ENV['KEYSTORE_ALIAS'],
#                 "android.injected.signing.key.password" => ENV['KEYSTORE_PASSWORD'],
#             }
#         )
#     end
end
